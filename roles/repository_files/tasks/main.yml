---
- name: Gather minimal facts for date/time if not available
  ansible.builtin.setup:
    filter: "ansible_date_time"
  when: ansible_date_time is not defined

- name: Clean up and create temporary directory for repository
  ansible.builtin.shell:
    cmd: "rm -rf '{{ repo_temp_dir }}' && mkdir -p '{{ repo_temp_dir }}'"
  changed_when: false

- name: Decrypt SSH key to temporary file
  ansible.builtin.shell:
    cmd: "ansible-vault view '{{ './secrets/id_rsa' | vault_fallback }}' > '{{ repo_temp_dir }}/.ssh_key'"
  changed_when: false

- name: Set proper permissions on SSH key
  ansible.builtin.file:
    path: "{{ repo_temp_dir }}/.ssh_key"
    mode: '0600'
  changed_when: false

- name: Clone repository
  ansible.builtin.git:
    repo: "{{ github_repo_ssh_url }}"
    dest: "{{ repo_temp_dir }}/repo"
    version: "{{ repo_default_branch | default('main') }}"
    force: true
    key_file: "{{ repo_temp_dir }}/.ssh_key"
    accept_hostkey: true
  changed_when: false

- name: Find all files in the files directory structure
  ansible.builtin.find:
    paths: "{{ repo_files_base_path }}"
    recurse: true
    file_type: file
  register: all_files_found
  delegate_to: localhost

- name: Process files with precedence resolution
  ansible.builtin.include_tasks: process_file.yml
  vars:
    file_item: "{{ item }}"
  loop: "{{ all_files_found.files }}"
  when: all_files_found.files | length > 0
  register: file_processing_results

- name: Check if there are any changes to commit
  ansible.builtin.command:
    cmd: git status --porcelain
    chdir: "{{ repo_temp_dir }}/repo"
  register: git_status
  changed_when: false

- name: Configure git user for repository only
  ansible.builtin.command:
    cmd: "git config {{ item.name }} '{{ item.value }}'"
    chdir: "{{ repo_temp_dir }}/repo"
  loop:
    - { name: "user.name", value: "{{ git_name }}" }
    - { name: "user.email", value: "{{ git_email }}" }
  when: git_status.stdout != ""
  changed_when: false

- name: Commit and push changes
  when: git_status.stdout != ""
  block:
    - name: Stage all changes
      ansible.builtin.command:
        cmd: git add .
        chdir: "{{ repo_temp_dir }}/repo"
      changed_when: false

    - name: Commit changes
      ansible.builtin.command:
        cmd: "git commit -m '{{ repo_files_commit_message }}'"
        chdir: "{{ repo_temp_dir }}/repo"
      changed_when: true

    - name: Push changes
      ansible.builtin.command:
        cmd: "git push origin {{ repo_default_branch }}"
        chdir: "{{ repo_temp_dir }}/repo"
      environment:
        GIT_SSH_COMMAND: "ssh -i {{ repo_temp_dir }}/.ssh_key -o StrictHostKeyChecking=no"
      changed_when: false

- name: Clean up temporary directory
  ansible.builtin.file:
    path: "{{ repo_temp_dir }}"
    state: absent
  changed_when: false

- name: Report repository file changes
  ansible.builtin.debug:
    msg: "Repository {{ inventory_hostname }} has been updated with file changes"
  changed_when: git_status.stdout != ""
